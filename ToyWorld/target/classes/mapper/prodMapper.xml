<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.scit.toyworld.dao.ProdMapper">

<insert id="insertProd" parameterType="prod">
insert into 
	toy_product(
		prodnum
		,prodname
		,prodcategory
		,prodmanufacturer
		,prodcontents
		,prodprice
		,prodstock
		,prodboxquantity
		,empid
	<if test="prodOriginalFileName != null">
		,prodoriginalfilename
		,prodsavedfilename
	</if>
	)values(
		#{prodNum}
		,#{prodName}
		,#{prodCategory}
		,#{prodManufacturer}
		,#{prodContents}
		,#{prodPrice}
		,#{prodStock}
		,#{prodBoxQuantity}
		,#{empId}
	<if test="prodOriginalFileName != null">
		,#{prodOriginalFileName}
		,#{prodSavedFileName}
	</if>
	)
</insert>

<select id="allList" resultType="hashmap" parameterType="pos">
select
	pd.prodnum as prodnum
	,pd.prodname as prodname
	,pd.prodcategory as prodcategory
	,pd.prodmanufacturer as prodmanufacturer
	,pd.prodcontents as prodcontents
	,pd.prodprice as prodprice
	,pd.prodstock as prodstock
	,pd.prodboxquantity as prodboxquantity
	,pd.prodoriginalfilename as prodoriginalfilename
	,pd.prodsavedfilename as prodsavedfilename
	,to_char(prodindate, 'YYYY-MM-DD') as prodindate
	,pd.empid
from
	toy_product	pd
<if test="positionNum != 0">
    ,toy_position_info pi
where
    pd.prodnum = pi.prodnum
and
    pi.positionnum = #{positionNum}
</if>
</select>

<select id="oneProd" parameterType="String" resultType="prod">
select
	prodnum
	,prodname
	,prodcategory
	,prodmanufacturer
	,prodcontents
	,prodprice
	,prodstock
	,prodboxquantity
	,prodoriginalfilename
	,prodsavedfilename
	,to_char(prodindate, 'YYYY-MM-DD') as prodindate
	,empid
from
	toy_product
where
	prodnum = #{prodNum}
</select>

<select id="allPositionNum" resultType="pos">
select
	positionNum
from
	toy_position
</select>

<insert id="RegInfo" parameterType="java.util.List">
insert into
	toy_position_info(
		infoNum
		,positionNum
		,prodNum
	)
	select toy_position_info_seq.nextval, A.* from(
		<foreach collection="list" item="item" separator="UNION ALL">
			select #{item.positionNum} as positionNum
					,#{item.prodNum} as prodNum
			from dual
		</foreach>) A
</insert>

<select id="search" resultType="pos" parameterType="string">
select
	distinct pi.positionnum as positionnum
from
	toy_product	pd
    ,toy_position_info pi
where
    pd.prodnum = pi.prodnum
and
    upper(pd.prodname) like '%' || upper(trim(#{searchText})) || '%'
</select>

</mapper>
